"""add all project table

Revision ID: 3b2c99e4b1ef
Revises: ac70d7894b2d
Create Date: 2025-10-22 12:00:29.676068

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3b2c99e4b1ef'
down_revision: Union[str, Sequence[str], None] = 'ac70d7894b2d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_name', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('companion_type', sa.String(length=50), nullable=False),
    sa.Column('health', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('shield', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('armor', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('mastery_rank', sa.Integer(), nullable=False),
    sa.Column('polarities', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_name')
    )
    op.create_table('melee_weapons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_name', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weapon_type', sa.String(length=50), nullable=False),
    sa.Column('mastery_rank', sa.Integer(), nullable=False),
    sa.Column('impact_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('puncture_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('slash_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('attack_speed', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('critical_chance', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('critical_multiplier', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('status_chance', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('range', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('slam_attack', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('slam_radial_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('slam_radius', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('slide_attack', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('heavy_attack_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('heavy_slam_attack', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('heavy_slam_radial_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('heavy_slam_radius', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('wind_up', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('follow_through', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('combo_duration', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('riven_disposition', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('polarities', sa.JSON(), nullable=True),
    sa.Column('stance_polarity', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_name')
    )
    op.create_table('mods',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_name', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('mod_type', sa.String(length=50), nullable=False),
    sa.Column('polarity', sa.String(length=20), nullable=False),
    sa.Column('rarity', sa.String(length=20), nullable=False),
    sa.Column('base_drain', sa.Integer(), nullable=False),
    sa.Column('max_rank', sa.Integer(), nullable=False),
    sa.Column('transmutable', sa.Boolean(), nullable=False),
    sa.Column('tradable', sa.Boolean(), nullable=False),
    sa.Column('fusion_limit', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_name')
    )
    op.create_table('primary_weapons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_name', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weapon_type', sa.String(length=50), nullable=False),
    sa.Column('mastery_rank', sa.Integer(), nullable=False),
    sa.Column('impact_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('puncture_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('slash_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('fire_rate', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('critical_chance', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('critical_multiplier', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('status_chance', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('accuracy', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('magazine_size', sa.Integer(), nullable=False),
    sa.Column('max_ammo', sa.Integer(), nullable=False),
    sa.Column('reload_time', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('projectile', sa.String(length=50), nullable=True),
    sa.Column('noise', sa.String(length=20), nullable=False),
    sa.Column('trigger', sa.String(length=50), nullable=False),
    sa.Column('riven_disposition', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('polarities', sa.JSON(), nullable=True),
    sa.Column('exilus_polarity', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_name')
    )
    op.create_table('secondary_weapons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_name', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weapon_type', sa.String(length=50), nullable=False),
    sa.Column('mastery_rank', sa.Integer(), nullable=False),
    sa.Column('impact_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('puncture_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('slash_damage', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('fire_rate', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('critical_chance', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('critical_multiplier', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('status_chance', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('accuracy', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('magazine_size', sa.Integer(), nullable=False),
    sa.Column('max_ammo', sa.Integer(), nullable=False),
    sa.Column('reload_time', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('projectile', sa.String(length=50), nullable=True),
    sa.Column('noise', sa.String(length=20), nullable=False),
    sa.Column('trigger', sa.String(length=50), nullable=False),
    sa.Column('riven_disposition', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('polarities', sa.JSON(), nullable=True),
    sa.Column('exilus_polarity', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_name')
    )
    op.create_table('abilities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('warframe_id', sa.Integer(), nullable=False),
    sa.Column('ability_index', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('energy_cost', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('can_helminth', sa.Boolean(), nullable=False),
    sa.CheckConstraint('ability_index >= 1 AND ability_index <= 4', name='check_ability_index'),
    sa.ForeignKeyConstraint(['warframe_id'], ['warframes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('warframe_id', 'ability_index', name='uq_warframe_ability')
    )
    op.create_table('builds',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('warframe_id', sa.Integer(), nullable=False),
    sa.Column('primary_weapon_id', sa.Integer(), nullable=True),
    sa.Column('secondary_weapon_id', sa.Integer(), nullable=True),
    sa.Column('melee_weapon_id', sa.Integer(), nullable=True),
    sa.Column('companion_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['companion_id'], ['companions.id'], ),
    sa.ForeignKeyConstraint(['melee_weapon_id'], ['melee_weapons.id'], ),
    sa.ForeignKeyConstraint(['primary_weapon_id'], ['primary_weapons.id'], ),
    sa.ForeignKeyConstraint(['secondary_weapon_id'], ['secondary_weapons.id'], ),
    sa.ForeignKeyConstraint(['warframe_id'], ['warframes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('companion_abilities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('companion_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['companion_id'], ['companions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('passive_abilities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('warframe_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['warframe_id'], ['warframes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('warframe_id')
    )
    op.create_table('build_mods',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('build_id', sa.Integer(), nullable=False),
    sa.Column('mod_id', sa.Integer(), nullable=False),
    sa.Column('target_type', sa.String(length=20), nullable=False),
    sa.Column('slot_index', sa.Integer(), nullable=False),
    sa.Column('mod_rank', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['build_id'], ['builds.id'], ),
    sa.ForeignKeyConstraint(['mod_id'], ['mods.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('build_id', 'target_type', 'slot_index', name='uq_build_target_slot')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('build_mods')
    op.drop_table('passive_abilities')
    op.drop_table('companion_abilities')
    op.drop_table('builds')
    op.drop_table('abilities')
    op.drop_table('secondary_weapons')
    op.drop_table('primary_weapons')
    op.drop_table('mods')
    op.drop_table('melee_weapons')
    op.drop_table('companions')
    # ### end Alembic commands ###
